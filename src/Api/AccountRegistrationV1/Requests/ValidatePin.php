<?php

/**
 * This file is auto-generated by Saloon SDK Generator
 * Generator: ShipStream\FedEx\Generator\Generators\RequestGenerator
 * Do not modify it directly.
 */

declare(strict_types=1);

namespace ShipStream\FedEx\Api\AccountRegistrationV1\Requests;

use Exception;
use Saloon\Contracts\Body\HasBody;
use Saloon\Enums\Method;
use Saloon\Http\Response;
use Saloon\Traits\Body\HasJsonBody;
use ShipStream\FedEx\Api\AccountRegistrationV1\Dto\ValidatePinInputVo;
use ShipStream\FedEx\Api\AccountRegistrationV1\Responses\ErrorResponseVo2;
use ShipStream\FedEx\Api\AccountRegistrationV1\Responses\IrcpResponseVo2;
use ShipStream\FedEx\Request;

/**
 * validatePin
 *
 * API End point being used to perform PIN validation during the credentials registration process of
 * csp consumers. This endpoint validates the PIN keyed in by the consumer. Then creates customer
 * keys.<br><i>Note: FedEx APIs do not support Cross-Origin Resource Sharing (CORS) mechanism.<i>
 */
class ValidatePin extends Request implements HasBody
{
    use HasJsonBody;

    protected Method $method = Method::POST;

    /**
     * @param  ValidatePinInputVo  $validatePinInputVo  This field indicates INPUT model
     * @param  string  $accountAuthToken  Address validation jwt
     * @param  ?string  $xClientid  This indicates the Client who is consuming this endpoint
     */
    public function __construct(
        public ValidatePinInputVo $validatePinInputVo,
        protected string $accountAuthToken,
        protected ?string $xClientid = null,
    ) {}

    public function resolveEndpoint(): string
    {
        return '/registration/v2/pin/keysgeneration';
    }

    public function createDtoFromResponse(Response $response): IrcpResponseVo2|ErrorResponseVo2
    {
        $status = $response->status();
        $responseCls = match ($status) {
            200 => IrcpResponseVo2::class,
            400, 404, 500 => ErrorResponseVo2::class,
            default => throw new Exception("Unhandled response status: {$status}")
        };

        return $responseCls::deserialize($response->json());
    }

    public function defaultBody(): array
    {
        return $this->validatePinInputVo->toArray();
    }

    public function defaultHeaders(): array
    {
        return array_filter(['accountAuthToken' => $this->accountAuthToken, 'x-clientid' => $this->xClientid]);
    }
}
