<?php

/**
 * This file is auto-generated by Saloon SDK Generator
 * Generator: Crescat\SaloonSdkGenerator\Generators\DtoGenerator
 * Do not modify it directly.
 */

declare(strict_types=1);

namespace ShipStream\FedEx\Api\ShipV1\Dto;

use ShipStream\FedEx\Dto;

final class PendingShipmentDetail extends Dto
{
    protected static array $complexArrayTypes = ['attachedDocuments' => UploadDocumentReferenceDetail::class];

    /**
     * @param  string  $pendingShipmentType  Specifies the pending shipment type.  Must include the value: EMAIL for email return shipments. <br>Not applicable for other types of shipments<br>Example: EMAIL
     * @param  EmailLabelDetail  $emailLabelDetail  These are specific information about the pending email label.<br>Required when PendingShipmentType is EMAIL.<br>Not applicable for CreateTag.
     * @param  ?PendingShipmentProcessingOptionsRequested  $processingOptions  Use this object to allow the Email Label shipment originator,  specify if the Email label shipment completer can make modifications to editable shipment data.
     * @param  ?RecommendedDocumentSpecification  $recommendedDocumentSpecification  These are documents that are recommended to be included with the shipment.<br>Example:ANTIQUE_STATEMENT_EUROPEAN_UNION
     * @param  UploadDocumentReferenceDetail[]|null  $attachedDocuments  These are the reference document details with the shipment.
     * @param  ?string  $expirationTimeStamp  Specifies the Email Label expiration date. The maximum expiration date for an Email Return Label must be greater of equal to the day of the label request and not greater than 2 years in the future. Format[YYYY-MM-DD] <br>Example: 2020-01-01
     */
    public function __construct(
        public string $pendingShipmentType,
        public EmailLabelDetail $emailLabelDetail,
        public ?PendingShipmentProcessingOptionsRequested $processingOptions = null,
        public ?RecommendedDocumentSpecification $recommendedDocumentSpecification = null,
        public ?array $attachedDocuments = null,
        public ?string $expirationTimeStamp = null,
    ) {}
}
