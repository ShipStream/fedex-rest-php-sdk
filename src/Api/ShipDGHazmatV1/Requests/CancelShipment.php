<?php

/**
 * This file is auto-generated by Saloon SDK Generator
 * Generator: ShipStream\FedEx\Generator\Generators\RequestGenerator
 * Do not modify it directly.
 */

declare(strict_types=1);

namespace ShipStream\FedEx\Api\ShipDGHazmatV1\Requests;

use Exception;
use Saloon\Contracts\Body\HasBody;
use Saloon\Enums\Method;
use Saloon\Http\Response;
use Saloon\Traits\Body\HasJsonBody;
use ShipStream\FedEx\Api\ShipDGHazmatV1\Dto\FullSchemaCancelShipment;
use ShipStream\FedEx\Api\ShipDGHazmatV1\Responses\ErrorResponseVo;
use ShipStream\FedEx\Api\ShipDGHazmatV1\Responses\ErrorResponseVo2;
use ShipStream\FedEx\Api\ShipDGHazmatV1\Responses\ErrorResponseVo3;
use ShipStream\FedEx\Api\ShipDGHazmatV1\Responses\ErrorResponseVo4;
use ShipStream\FedEx\Api\ShipDGHazmatV1\Responses\ErrorResponseVo5;
use ShipStream\FedEx\Api\ShipDGHazmatV1\Responses\ErrorResponseVo6;
use ShipStream\FedEx\Api\ShipDGHazmatV1\Responses\ShpcResponseVoCancelShipment;
use ShipStream\FedEx\Request;

/**
 * CancelShipment
 *
 * Use this endpoint to cancel FedEx Express and Ground shipments that have not already been tendered
 * to FedEx. This request will cancel all packages within the shipment.<br><i>Note: FedEx APIs do not
 * support Cross-Origin Resource Sharing (CORS) mechanism.<i>
 */
class CancelShipment extends Request implements HasBody
{
    use HasJsonBody;

    protected Method $method = Method::PUT;

    /**
     * @param  FullSchemaCancelShipment  $fullSchemaCancelShipment  The request elements required to cancel a shipment.
     */
    public function __construct(
        public FullSchemaCancelShipment $fullSchemaCancelShipment,
    ) {}

    public function resolveEndpoint(): string
    {
        return '/ship/v1/dghazshipments/cancel';
    }

    public function createDtoFromResponse(
        Response $response,
    ): ShpcResponseVoCancelShipment|ErrorResponseVo2|ErrorResponseVo3|ErrorResponseVo4|ErrorResponseVo5|ErrorResponseVo6|ErrorResponseVo {
        $status = $response->status();
        $responseCls = match ($status) {
            200 => ShpcResponseVoCancelShipment::class,
            400 => ErrorResponseVo2::class,
            401 => ErrorResponseVo3::class,
            403 => ErrorResponseVo4::class,
            404 => ErrorResponseVo5::class,
            500 => ErrorResponseVo6::class,
            503 => ErrorResponseVo::class,
            default => throw new Exception("Unhandled response status: {$status}")
        };

        return $responseCls::deserialize($response->json());
    }

    public function defaultBody(): array
    {
        return $this->fullSchemaCancelShipment->toArray();
    }
}
