<?php

/**
 * This file is auto-generated by Saloon SDK Generator
 * Generator: ShipStream\FedEx\Generator\Generators\ResourceGenerator
 * Do not modify it directly.
 */

declare(strict_types=1);

namespace ShipStream\FedEx\Api\ConsolidationV1;

use Saloon\Http\Response;
use ShipStream\FedEx\Api\ConsolidationV1\Dto\ConsolidationShipmentResultsInputVo;
use ShipStream\FedEx\Api\ConsolidationV1\Dto\FullSchemaConfirmConsolidation;
use ShipStream\FedEx\Api\ConsolidationV1\Dto\FullSchemaConfirmConsolidationResults;
use ShipStream\FedEx\Api\ConsolidationV1\Dto\FullSchemaCreateConsolidation;
use ShipStream\FedEx\Api\ConsolidationV1\Dto\FullSchemaCreateConsolidationShipment;
use ShipStream\FedEx\Api\ConsolidationV1\Dto\FullSchemaDeleteConsolidation;
use ShipStream\FedEx\Api\ConsolidationV1\Dto\FullSchemaDeleteShipment;
use ShipStream\FedEx\Api\ConsolidationV1\Dto\FullSchemaModifyConsolidation;
use ShipStream\FedEx\Api\ConsolidationV1\Dto\FullSchemaRetrieveConsolidation;
use ShipStream\FedEx\Api\ConsolidationV1\Requests\ConfirmConsolidationResults;
use ShipStream\FedEx\Api\ConsolidationV1\Requests\ConfirmConsolidations;
use ShipStream\FedEx\Api\ConsolidationV1\Requests\ConsolidationShipmentResults;
use ShipStream\FedEx\Api\ConsolidationV1\Requests\CreateConsolidation;
use ShipStream\FedEx\Api\ConsolidationV1\Requests\CreateConsolidationShipment;
use ShipStream\FedEx\Api\ConsolidationV1\Requests\DeleteConsolidation;
use ShipStream\FedEx\Api\ConsolidationV1\Requests\DeleteConsolidationShipments;
use ShipStream\FedEx\Api\ConsolidationV1\Requests\ModifyConsolidation;
use ShipStream\FedEx\Api\ConsolidationV1\Requests\RetrieveConsolidation;
use ShipStream\FedEx\BaseResource;

class Api extends BaseResource
{
    /**
     * @param  FullSchemaModifyConsolidation  $fullSchemaModifyConsolidation  The request elements required to modify a consolidation.
     */
    public function modifyConsolidation(FullSchemaModifyConsolidation $fullSchemaModifyConsolidation): Response
    {
        return $this->connector->send(new ModifyConsolidation($fullSchemaModifyConsolidation));
    }

    /**
     * @param  FullSchemaCreateConsolidation  $fullSchemaCreateConsolidation  The request elements required to create a consolidation.
     */
    public function createConsolidation(FullSchemaCreateConsolidation $fullSchemaCreateConsolidation): Response
    {
        return $this->connector->send(new CreateConsolidation($fullSchemaCreateConsolidation));
    }

    /**
     * @param  FullSchemaCreateConsolidationShipment  $fullSchemaCreateConsolidationShipment  The request elements required to create a consolidation shipment.
     */
    public function createConsolidationShipment(
        FullSchemaCreateConsolidationShipment $fullSchemaCreateConsolidationShipment,
    ): Response {
        return $this->connector->send(new CreateConsolidationShipment($fullSchemaCreateConsolidationShipment));
    }

    public function consolidationShipmentResults(
        ConsolidationShipmentResultsInputVo $consolidationShipmentResultsInputVo,
    ): Response {
        return $this->connector->send(new ConsolidationShipmentResults($consolidationShipmentResultsInputVo));
    }

    public function confirmConsolidations(FullSchemaConfirmConsolidation $fullSchemaConfirmConsolidation): Response
    {
        return $this->connector->send(new ConfirmConsolidations($fullSchemaConfirmConsolidation));
    }

    public function confirmConsolidationResults(
        FullSchemaConfirmConsolidationResults $fullSchemaConfirmConsolidationResults,
    ): Response {
        return $this->connector->send(new ConfirmConsolidationResults($fullSchemaConfirmConsolidationResults));
    }

    /**
     * @param  FullSchemaRetrieveConsolidation  $fullSchemaRetrieveConsolidation  The request elements required to retrieve a consolidation.
     */
    public function retrieveConsolidation(FullSchemaRetrieveConsolidation $fullSchemaRetrieveConsolidation): Response
    {
        return $this->connector->send(new RetrieveConsolidation($fullSchemaRetrieveConsolidation));
    }

    /**
     * @param  FullSchemaDeleteShipment  $fullSchemaDeleteShipment  The request elements required to cancel a shipment.
     */
    public function deleteConsolidationShipments(FullSchemaDeleteShipment $fullSchemaDeleteShipment): Response
    {
        return $this->connector->send(new DeleteConsolidationShipments($fullSchemaDeleteShipment));
    }

    /**
     * @param  FullSchemaDeleteConsolidation  $fullSchemaDeleteConsolidation  The request elements required to delete a consolidation.
     */
    public function deleteConsolidation(FullSchemaDeleteConsolidation $fullSchemaDeleteConsolidation): Response
    {
        return $this->connector->send(new DeleteConsolidation($fullSchemaDeleteConsolidation));
    }
}
