{
    "openapi": "3.0.0",
    "info": {
        "title": "Basic Integrated Visibility ",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/"
        }
    ],
    "paths": {
        "/track/v1/trackingdocuments": {
            "post": {
                "summary": "Track Document",
                "description": "This endpoint helps you to request a letter that includes the recipient's signature as a proof of delivery.<br><i>Note: FedEx APIs do not support Cross-Origin Resource Sharing (CORS) mechanism.</i>",
                "operationId": "TrackingDocuments",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/Full_Schema_SPOD"
                                    },
                                    {
                                        "$ref": "#/components/schemas/Minimum_Payload_Track_Document"
                                    },
                                    {
                                        "$ref": "#/components/schemas/Minimum_Sample_Payload_BOL"
                                    },
                                    {
                                        "$ref": "#/components/schemas/Minimum_Sample_Payload_FBD"
                                    }
                                ]
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrkcResponseVO_SPOD"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseVO"
                                },
                                "example": {
                                    "transactionId": "624deea6-b709-470c-8c39-4b5511281492",
                                    "customerTransactionId": "AnyCo_order123456789",
                                    "errors": [
                                        {
                                            "code": "TRACKING.TRACKINGNUMBER.NOTFOUND",
                                            "message": "Tracking number cannot be found. Please correct the tracking number and try again."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseVO401"
                                },
                                "example": {
                                    "transactionId": "624deea6-b709-470c-8c39-4b5511281492",
                                    "errors": [
                                        {
                                            "code": "NOT.AUTHORIZED.ERROR",
                                            "message": "Access token expired. Please modify your request and try again."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseVO403"
                                },
                                "example": {
                                    "transactionId": "624deea6-b709-470c-8c39-4b5511281492",
                                    "errors": [
                                        {
                                            "code": "FORBIDDEN.ERROR",
                                            "message": "We could not authorize your credentials. Please check your permissions and try again."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseVO404"
                                },
                                "example": {
                                    "transactionId": "624deea6-b709-470c-8c39-4b5511281492",
                                    "errors": [
                                        {
                                            "code": "NOT.FOUND.ERROR",
                                            "message": "The resource you requested is no longer available. Please modify your request and try again."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failure",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseVO500"
                                },
                                "example": {
                                    "transactionId": "624deea6-b709-470c-8c39-4b5511281492",
                                    "customerTransactionId": "AnyCo_order123456789",
                                    "errors": [
                                        {
                                            "code": "INTERNAL.SERVER.ERROR",
                                            "message": "We encountered an unexpected error and are working to resolve the issue. We apologize for any inconvenience. Please check back at a later time."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponseVO503"
                                },
                                "example": {
                                    "transactionId": "624deea6-b709-470c-8c39-4b5511281492",
                                    "customerTransactionId": "AnyCo_order123456789",
                                    "errors": [
                                        {
                                            "code": "SERVICE.UNAVAILABLE.ERROR",
                                            "message": "The service is currently unavailable and we are working to resolve the issue. We apologize for any inconvenience. Please check back at a later time."
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "header",
                        "name": "x-customer-transaction-id",
                        "description": "This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "624deea6-b709-470c-8c39-4b5511281492"
                        }
                    },
                    {
                        "in": "header",
                        "name": "content-type",
                        "description": "This is used to indicate the media type of the resource. The media type is a string sent along with the file indicating format of the file.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "application/json"
                        }
                    },
                    {
                        "in": "header",
                        "name": "x-locale",
                        "description": "This indicates the combination of language code and country code.  <a onclick='loadDocReference(\"locales\")'>Click here to see Locales</a>",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "en_US"
                        }
                    },
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "This indicates the authorization token for the input request.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "Bearer XXX"
                        }
                    }
                ],
                "x-code-samples": [
                    {
                        "lang": "C#",
                        "source": "var client = new RestClient(\"https://apis-sandbox.fedex.com/track/v1/trackingdocuments\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"Authorization\", \"Bearer \");\nrequest.AddHeader(\"X-locale\", \"en_US\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\n// 'input' refers to JSON Payload\nrequest.AddParameter(\"application/x-www-form-urlencoded\", input, ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);\n\n\n\n\n"
                    },
                    {
                        "lang": "JAVA",
                        "source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\n// 'input' refers to JSON Payload\nRequestBody body = RequestBody.create(mediaType, input);\nRequest request = new Request.Builder()\n    .url(\"https://apis-sandbox.fedex.com/track/v1/trackingdocuments\")\n    .post(body)\n    .addHeader(\"Content-Type\", \"application/json\")\n    .addHeader(\"X-locale\", \"en_US\")\n    .addHeader(\"Authorization\", \"Bearer \")\n    .build();\n            \nResponse response = client.newCall(request).execute();"
                    },
                    {
                        "lang": "JAVASCRIPT",
                        "source": "// 'input' refers to JSON Payload\nvar data = JSON.stringify(input);\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"POST\", \"https://apis-sandbox.fedex.com/track/v1/trackingdocuments\");\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n  xhr.setRequestHeader(\"X-locale\", \"en_US\");\n  xhr.setRequestHeader(\"Authorization\", \"Bearer \");\n  \n  xhr.send(data);"
                    },
                    {
                        "lang": "PHP",
                        "source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://apis-sandbox.fedex.com/track/v1/trackingdocuments');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'Authorization' => 'Bearer ',\n  'X-locale' => 'en_US',\n  'Content-Type' => 'application/json'\n));\n\n$request->setBody(input); // 'input' refers to JSON Payload\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
                    },
                    {
                        "lang": "PYTHON",
                        "source": "import requests\n\nurl = \"https://apis-sandbox.fedex.com/track/v1/trackingdocuments\"\n\npayload = input # 'input' refers to JSON Payload\nheaders = {\n    'Content-Type': \"application/json\",\n    'X-locale': \"en_US\",\n    'Authorization': \"Bearer \"\n    }\n\nresponse = requests.post(url, data=payload, headers=headers)\n\nprint(response.text)"
                    },
                    {
                        "lang": "RUST",
                        "source": "extern crate reqwest;\n\nuse std::io::Read;\n\nfn construct_headers() -> HeaderMap {\n    let mut headers = HeaderMap::new();\n    headers.insert(\"Content-Type\", \"application/json\");\n    headers.insert(\"X-locale\", \"en_US\");\n    headers.insert(\"Authorization\", \"Bearer \");\n    headers\n}\n\nfn run() -> Result<()> {\n    let client = reqwest::Client::new();\n    let mut res = client.post(\"https://apis-sandbox.fedex.com/track/v1/trackingdocuments\")\n        .body(input) // 'input' refers to JSON Payload\n        .headers(construct_headers())\n        .send()?;\n    let mut body = String::new();\n    res.read_to_string(&mut body)?;\n\n    println!(\"Status: {}\", res.status());\n    println!(\"Headers:\\n{:#?}\", res.headers());\n    println!(\"Body:\\n{}\", body);\n\n    Ok(())\n}"
                    },
                    {
                        "lang": "SWIFT",
                        "source": "import Foundation\n\nlet headers = [\n  \"Content-Type\": \"application/json\",\n  \"X-locale\": \"en_US\",\n  \"Authorization\": \"Bearer \"\n]\nlet parameters = [\n  input // 'input' refers to JSON Payload\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://apis-sandbox.fedex.com/track/v1/trackingdocuments\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Full_Schema_SPOD": {
                "required": [
                    "trackDocumentDetail",
                    "trackDocumentSpecification"
                ],
                "type": "object",
                "properties": {
                    "trackDocumentDetail": {
                        "description": "This object specifies the tracking document details such as types of documents, for example, SIGNATURE_PROOF_OF_DELIVERY and also the format of tracking document. Supported values are PDF and PNG. Default is PDF.",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TrackDocumentDetail"
                            }
                        ]
                    },
                    "trackDocumentSpecification": {
                        "type": "array",
                        "description": "This is the placeholder for document specification details required to identify the shipment being tracked. This includes tracking information such as tracking qualifier, carrier code, and tracking number.<br>At least one trackDocumentSpecification is required. Maximum limit is 30.",
                        "items": {
                            "$ref": "#/components/schemas/TrackDocumentSpecification"
                        }
                    }
                }
            },
            "TrackDocumentDetail": {
                "required": [
                    "documentType"
                ],
                "type": "object",
                "properties": {
                    "documentType": {
                        "type": "string",
                        "description": "Indicate the Tracking Document. <br>Valid values are SIGNATURE_PROOF_OF_DELIVERY, BILL_OF_LADING and FREIGHT_BILLING_DOCUMENT.<br>Example: SIGNATURE_PROOF_OF_DELIVERY.<br><i>Note: The SPOD information will be presented as a byte array instead of an image. The byte array is a base64 encoded string, which should be decoded to get the final signature image in PDF or PNG format</i>",
                        "example": "SIGNATURE_PROOF_OF_DELIVERY"
                    },
                    "documentFormat": {
                        "type": "string",
                        "description": "Specifies the format of tracking document. <br>Valid values are PDF or PNG.<br>The values are key sensitive.<br>Note: documentTypes BILL_OF_LADING and FREIGHT_BILLING_DOCUMENT does not support PNG.",
                        "example": "PNG"
                    }
                },
                "description": "Specifies the tracking document details."
            },
            "TrackDocumentSpecification": {
                "required": [
                    "trackingNumberInfo"
                ],
                "type": "object",
                "properties": {
                    "trackingNumberInfo": {
                        "allOf": [
                            {
                                "description": "Information uniquely identifying the shipment such as Tracking number, Carrier Code, and Tracking number uniqueId."
                            },
                            {
                                "$ref": "#/components/schemas/TrackingNumberInfo"
                            }
                        ]
                    },
                    "shipDateBegin": {
                        "type": "string",
                        "description": "ShipDateBegin and ShipDateEnd are used to narrow the search, reduce lookup time, and avoid duplicates when searching for a specific tracking number during a specific date range.<br>Format: YYYY-MM-DD<br>example: '2020-03-29'",
                        "example": "2020-03-29"
                    },
                    "shipDateEnd": {
                        "type": "string",
                        "description": "ShipDateBegin and ShipDateEnd are recommended to narrow the search, reduce lookup time, and avoid duplicates when searching for a specific tracking number during a specific date range.<br>Format: YYYY-MM-DD<br>example: '2020-04-01'",
                        "example": "2020-04-01"
                    },
                    "accountNumber": {
                        "type": "string",
                        "description": "Specifies Signature Proof of Delivery(SPOD) account number for the shipment being tracked.<br>Conditionally required when documentType is BILL_OF_LADING or FREIGHT_BILLING_DOCUMENT<br>Example: 123456789",
                        "example": "XXX61073"
                    }
                }
            },
            "TrackingNumberInfo": {
                "required": [
                    "trackingNumber"
                ],
                "type": "object",
                "properties": {
                    "trackingNumber": {
                        "type": "string",
                        "description": "This is a Tracking number for FedEx packages used for tracking a single package or group of packages. <br> Example: 128667043726<br><a onclick='loadDocReference(\"mocktrackingnumbersforfedexexpressandfedexground\")'>Click here to see Mock Tracking Numbers.</a>",
                        "example": "128667043726"
                    },
                    "carrierCode": {
                        "type": "string",
                        "description": "This is a placeholder to provide the FedEx operating company (transportation) code used for package delivery. <br> Example: FDXE",
                        "example": "FDXE",
                        "enum": [
                            "FDXE",
                            "FDXG",
                            "FXSP",
                            "FXFR",
                            "FDXC",
                            "FXCC",
                            "FEDEX_CARGO",
                            "FEDEX_CUSTOM_CRITICAL",
                            "FEDEX_EXPRESS",
                            "FEDEX_FREIGHT",
                            "FEDEX_GROUND",
                            "FEDEX_OFFICE",
                            "FEDEX_KINKOS",
                            "FX",
                            "FDFR",
                            "FDEG",
                            "FXK",
                            "FDC",
                            "FDCC"
                        ]
                    },
                    "trackingNumberUniqueId": {
                        "type": "string",
                        "description": "Unique identifier used to distinguish duplicate FedEx tracking numbers. This value will be set by FedEx systems. <br> Example: 245822\\~123456789012\\~FDEG",
                        "example": "245822~123456789012~FDEG"
                    }
                },
                "description": "Information uniquely identifying a shipment such as Tracking number, ShipDate, and Tracking number uniqueId."
            },
            "Minimum_Payload_Track_Document": {
                "example": {
                    "trackDocumentSpecification": [
                        {
                            "trackingNumberInfo": {
                                "trackingNumber": "794971357442"
                            }
                        }
                    ],
                    "trackDocumentDetail": {
                        "documentType": "SIGNATURE_PROOF_OF_DELIVERY"
                    }
                }
            },
            "Minimum_Sample_Payload_BOL": {
                "example": {
                    "trackDocumentSpecification": [
                        {
                            "accountNumber": "123456789",
                            "trackingNumberInfo": {
                                "trackingNumber": "794924591930"
                            }
                        }
                    ],
                    "trackDocumentDetail": {
                        "documentType": "BILL_OF_LADING",
                        "documentFormat": "PDF"
                    }
                }
            },
            "Minimum_Sample_Payload_FBD": {
                "example": {
                    "trackDocumentSpecification": [
                        {
                            "accountNumber": "123456789",
                            "trackingNumberInfo": {
                                "trackingNumber": "794924591930"
                            }
                        }
                    ],
                    "trackDocumentDetail": {
                        "documentType": "FREIGHT_BILLING_DOCUMENT",
                        "documentFormat": "PDF"
                    }
                }
            },
            "TrkcResponseVO_SPOD": {
                "type": "object",
                "properties": {
                    "transactionId": {
                        "type": "string",
                        "description": "The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492",
                        "example": "624deea6-b709-470c-8c39-4b5511281492"
                    },
                    "customerTransactionId": {
                        "type": "string",
                        "description": "This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789",
                        "example": "AnyCo_order123456789"
                    },
                    "output": {
                        "$ref": "#/components/schemas/BaseProcessOutputVO_SPOD"
                    }
                },
                "description": "This is a wrapper class for outputVO"
            },
            "BaseProcessOutputVO_SPOD": {
                "$ref": "#/components/schemas/SPODResponseVO"
            },
            "SPODResponseVO": {
                "type": "object",
                "properties": {
                    "localization": {
                        "$ref": "#/components/schemas/Localization"
                    },
                    "documentType": {
                        "type": "string",
                        "description": "The types of tracking document.<br> Example: SIGNATURE_PROOF_OF_DELIVERY"
                    },
                    "documentFormat": {
                        "type": "string",
                        "description": "The format of the tracking document. <br>Valid values are PDF and PNG.",
                        "example": "PNG"
                    },
                    "document": {
                        "type": "array",
                        "format": "base64",
                        "description": "This field holds the list of byte array(base64) which specifies the image of the recipient's signature (if the signature is available) once the shipment has been delivered. <br>Example: [iVBORw0KGgoAAAANSUhEUgAABX0AAAfECAIAAACJ1ysDAACAAElEQVR42uzdeXxM9/4/8EhC3ZZkskmotlpuq6227r1ur6KqrSXLZLHvhKyIndJy7ZLMlgiy2BJ71E4QewmCICUqJAiCIIgkM3P2M/P7nDkxHQm97b0339b9vZ6P92MeM3P2kX8+L5/FzgQAAAAAAAAAUDvs8BMAAAAAAAAAQC1B7gAAAAAAAAAAtQW5AwAAAAAAAADUFuQOAAAAAAAAAFBbkDsAAAAAAAAAQG1B7gAAAAAAAAAAtQW5AwAAAAAAAADUFuQOAAAAAAAAAFBbkDsAAAAAAAAAQG1B7gAAAAAAAAAAtQW5AwAAAAAAAADUFuQOAAAAAAAAAFBbkDsAAAAAAAAAQG1B7gAAAAAAAAAAtQW5AwAAAAAAAADUFuQOAAAAAAAAAFBbkDsAAAAAAAAAQG1B7gAAAAAAAAAAtQW5AwAAAAAAAADUFuQOAAAAAAAAAFBbkDsAAAAAAAAAQG1B7gAAAAAAAAAAtQW5AwAAAAAAAADUFuQOAAAAAAAAAFBbkDsAAAAAAAAAQG1B7gAAAAAAAAAAtQW5AwAAAAAAAADUFuQOAAAAAAAAAFBbkDsAAAAAAAAAQG1B7gAAAAAAAAAAtQW5AwAAAAAAAADUFuQO/6bl0/+dhCEfLh7eOonUsE8S5RouFfly8YD34od8lKAK23ruUKGhXO7v8CtzB1Mt5A6FP+cOLuRxrLmDLtBD1d9rtmWcxRf6Yba5g6MlenAwRdTlo5zoyU2N0/5snPYe9d179Hfvst+1YL9rznwrFT2pKf1tCyqlN3V8BVOcKxjLkDsAAAAAAAAgd4B/J3dQukiv/d5eGPH3ZdMCNySO27du/vH10cdXzzm6ek6Wba345+HUWT/sXZ17K/8uYzSIAmey5A6m58cKctwgWsry/tmbeXGL+l+nFKKcOwyTcodeTeOUUu6gepo7aAM9YmrmDqawuqYw6VUMqy+MUHD//J]",
                        "items": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    "alerts": {
                        "type": "array",
                        "description": "Specifies the alert received when the recipient's signature has been            taken as a proof of shipment delivery.<br>Example: TRACKING.DATA.NOTFOUND -  Tracking data unavailable",
                        "example": "TRACKING.DATA.NOTFOUND -  Tracking data unavailable",
                        "items": {
                            "$ref": "#/components/schemas/Alert"
                        }
                    }
                }
            },
            "Localization": {
                "required": [
                    "languageCode"
                ],
                "type": "object",
                "properties": {
                    "languageCode": {
                        "type": "string",
                        "description": "Identifies two-letter code for the language (e.g. en/EN, fr/FR, es/ES etc..).<br> Example: en",
                        "example": "en"
                    },
                    "localeCode": {
                        "type": "string",
                        "description": "Identifies the two-letter code for the region, used to further identify the requested language.  for example, if you request Spanish, you must include a locale code of <i>US</i> for North American Spanish, or <i>MX</i> for Mexico. <br> Example: US<br><a onclick='loadDocReference(\"locales\")'>Click here to see Locales</a>",
                        "example": "US"
                    }
                },
                "description": "Specifies the language details for email notification."
            },
            "Alert": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "Specifies the api alert code."
                    },
                    "alertType": {
                        "type": "string",
                        "description": "Specifies the api alert type.",
                        "enum": [
                            "NOTE",
                            "WARNING"
                        ]
                    },
                    "message": {
                        "type": "string",
                        "description": "Specifies the api alert message."
                    }
                },
                "description": "Specifies the api alerts."
            },
            "ErrorResponseVO": {
                "type": "object",
                "properties": {
                    "transactionId": {
                        "type": "string",
                        "description": "The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492",
                        "example": "624deea6-b709-470c-8c39-4b5511281492"
                    },
                    "customerTransactionId": {
                        "type": "string",
                        "description": "This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789",
                        "example": "AnyCo_order123456789"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CXSError"
                        }
                    }
                }
            },
            "CXSError": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "Indicates the error code.<br>Example: TRACKING.TRACKINGNUMBER.NOTFOUND"
                    },
                    "parameterList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Parameter"
                        }
                    },
                    "message": {
                        "type": "string",
                        "description": "Indicates the description of API error alert message.<br>Example: Tracking number cannot be found. Please correct the tracking number and try again."
                    }
                },
                "description": "Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter"
            },
            "Parameter": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "description": "Identifies the error option to be applied. <br>Example: value",
                        "example": "value"
                    },
                    "key": {
                        "type": "string",
                        "description": "Indicates the value associated with the key.<br> Example: key",
                        "example": "key"
                    }
                },
                "description": "List of parameters which indicates the properties of the alert message."
            },
            "ErrorResponseVO401": {
                "type": "object",
                "properties": {
                    "transactionId": {
                        "type": "string",
                        "description": "The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492",
                        "example": "624deea6-b709-470c-8c39-4b5511281492"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CXSError401"
                        }
                    }
                }
            },
            "CXSError401": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "Indicates the error code.<br>Example: NOT.AUTHORIZED.ERROR"
                    },
                    "parameterList": {
                        "type": "array",
                        "description": "List of parameters.",
                        "items": {
                            "$ref": "#/components/schemas/Parameter"
                        }
                    },
                    "message": {
                        "description": "Indicates the description of API error alert message.<br>Example: Access token expired. Please modify your request and try again."
                    }
                },
                "description": "Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter"
            },
            "ErrorResponseVO403": {
                "type": "object",
                "properties": {
                    "transactionId": {
                        "type": "string",
                        "description": "The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492",
                        "example": "624deea6-b709-470c-8c39-4b5511281492"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CXSError403"
                        }
                    }
                }
            },
            "CXSError403": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "Indicates the error code.<br>Example: FORBIDDEN.ERROR"
                    },
                    "parameterList": {
                        "type": "array",
                        "description": "List of parameters.",
                        "items": {
                            "$ref": "#/components/schemas/Parameter"
                        }
                    },
                    "message": {
                        "description": "Indicates the description of API error alert message.<br>Example: We could not authorize your credentials. Please check your permissions and try again"
                    }
                },
                "description": "Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter"
            },
            "ErrorResponseVO404": {
                "type": "object",
                "properties": {
                    "transactionId": {
                        "type": "string",
                        "description": "The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492",
                        "example": "624deea6-b709-470c-8c39-4b5511281492"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CXSError404"
                        }
                    }
                }
            },
            "CXSError404": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "Indicates the error code.<br>Example: NOT.FOUND.ERROR"
                    },
                    "parameterList": {
                        "type": "array",
                        "description": "List of parameters.",
                        "items": {
                            "$ref": "#/components/schemas/Parameter"
                        }
                    },
                    "message": {
                        "description": "Indicates the description of API error alert message.<br>Example: The resource you requested is no longer available. Please modify your request and try again."
                    }
                },
                "description": "Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter"
            },
            "ErrorResponseVO500": {
                "type": "object",
                "properties": {
                    "transactionId": {
                        "type": "string",
                        "description": "The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492",
                        "example": "624deea6-b709-470c-8c39-4b5511281492"
                    },
                    "customerTransactionId": {
                        "type": "string",
                        "description": "This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789",
                        "example": "AnyCo_order123456789"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CXSError500"
                        }
                    }
                }
            },
            "CXSError500": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "Indicates the error code.<br>Example: INTERNAL.SERVER.ERROR"
                    },
                    "parameterList": {
                        "type": "array",
                        "description": "List of parameters.",
                        "items": {
                            "$ref": "#/components/schemas/Parameter"
                        }
                    },
                    "message": {
                        "description": "Indicates the description of API error alert message.<br>Example: We encountered an unexpected error and are working to resolve the issue. We apologize for any inconvenience. Please check back at a later time."
                    }
                },
                "description": "Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter"
            },
            "ErrorResponseVO503": {
                "type": "object",
                "properties": {
                    "transactionId": {
                        "type": "string",
                        "description": "The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492",
                        "example": "624deea6-b709-470c-8c39-4b5511281492"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CXSError503"
                        }
                    }
                }
            },
            "CXSError503": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "Indicates the error code.<br>Example: SERVICE.UNAVAILABLE.ERROR"
                    },
                    "parameterList": {
                        "type": "array",
                        "description": "List of parameters.",
                        "items": {
                            "$ref": "#/components/schemas/Parameter"
                        }
                    },
                    "message": {
                        "description": "Indicates the description of API error alert message.<br>Example: The service is currently unavailable and we are working to resolve the issue. We apologize for any inconvenience. Please check back at a later time."
                    }
                },
                "description": "Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter"
            }
        }
    }
}